{"version":3,"sources":["components/04-Modal/Modal.module.css","components/02-Employees/employees.module.css","components/03-Header/styles.module.css","components/02-Employees/AddUser/AddUser.module.css","components/02-Employees/User/Users.module.css","components/03-Header/Header.tsx","components/01-Home/Home.tsx","api/api.ts","redux/usersReducer.ts","components/04-Modal/Modal.tsx","components/02-Employees/AddUser/AddUser.tsx","components/02-Employees/User/Users.tsx","components/02-Employees/Employees.tsx","components/02-Employees/EmployeesContainer.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","Header","className","s","header","nav","to","Home","instance","axios","create","baseURL","usersAPI","get","then","res","id","delete","slice","createSlice","name","initialState","users","reducers","setUsers","state","action","console","log","payload","user","removeUser","index","findIndex","tl","splice","addUser","Math","floor","random","email","avatar","usersReducer","reducer","actions","Modal","modal","setModal","children","modalClassName","active","modalContentClassName","content","onClick","e","stopPropagation","AddUser","useState","firstName","setFirstName","lastName","setLastName","open","setOpen","dispatch","useDispatch","btn","Button","form","type","value","placeholder","onChange","target","first_name","last_name","disabled","Users","employeesOverlay","src","alt","Employees","useSelector","useEffect","a","status","data","error","removeUserTC","mappedUsers","useCallback","map","container","EmployeesContainer","empl","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","prepend","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,uBAAuB,OAAS,wB,mBCAzFD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,UAAY,6BAA6B,KAAO,0B,mBCAjGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,sB,mBCAxDD,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,gCAAgC,KAAO,sB,oKCG/DC,EAAS,WAClB,OACI,sBAAKC,UAAWC,IAAEC,OAAlB,UACI,cAAC,IAAD,CAASF,UAAWC,IAAEE,IAAKC,GAAG,QAA9B,kBACA,cAAC,IAAD,CAASJ,UAAWC,IAAEE,IAAKC,GAAG,aAA9B,2B,OCNCC,EAAO,WAChB,OACI,wC,wECFFC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,2BAGAC,EAAW,WAEhB,OAAOJ,EAASK,IAAT,qBACFC,MAAK,SAAAC,GAAG,OAAIA,MAHZH,EAAW,SAKTI,GACP,OAAOR,EAASS,OAAT,gBAAyBD,KCJlCE,EAAQC,YAAY,CACtBC,KAAM,QACNC,aANiB,CACjBC,MAAO,IAMPC,SAAU,CACNC,SAAU,SAACC,EAAOC,GACdC,QAAQC,IAAIH,EAAMH,OAClBG,EAAMH,MAAQI,EAAOG,QAAQC,MAEjCC,WAAY,SAACN,EAAOC,GAChB,IAAMM,EAAQP,EAAMH,MAAMW,WAAU,SAAAC,GAAE,OAAIA,EAAGlB,KAAOU,EAAOG,QAAQb,MAC/DgB,GAAS,GACTP,EAAMH,MAAMa,OAAOH,EAAO,IAGlCI,QAXM,SAWEX,EAAOC,GACXD,EAAMH,MAAN,cACIN,GAAIqB,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,MAAO,GACPC,OAAQ,IACLf,EAAOG,UAJd,mBAKMJ,EAAMH,YAKXoB,EAAexB,EAAMyB,Q,EAGazB,EAAM0B,QAAvCpB,E,EAAAA,SAAUO,E,EAAAA,WAAYK,E,EAAAA,Q,iBCdrBS,EAZc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACtCC,EAAc,UAAM9C,IAAE2C,MAAR,YAAiBA,EAAQ3C,IAAE+C,OAAS,IAClDC,EAAqB,UAAMhD,IAAEiD,QAAR,YAAmBN,EAAQ3C,IAAE+C,OAAS,IACjE,OACI,qBAAKhD,UAAW+C,EAAgBI,QAAU,kBAAMN,GAAS,IAAzD,SACI,qBAAK7C,UAAWiD,EAAuBE,QAAS,SAAAC,GAAC,OAAKA,EAAEC,mBAAxD,SACKP,O,yBCTJQ,EAAU,WAAO,IAAD,EACSC,mBAAiB,IAD1B,mBAClBC,EADkB,KACPC,EADO,OAEOF,mBAAiB,IAFxB,mBAElBG,EAFkB,KAERC,EAFQ,OAGDJ,oBAAS,GAHR,mBAGlBK,EAHkB,KAGZC,EAHY,KAInBC,EAAWC,cAgBjB,OACI,gCACI,qBAAK/D,UAAWC,IAAE+D,IAAlB,SACI,cAACC,EAAA,EAAD,CAAQd,QAAS,WACbU,GAAQ,IADZ,wBAKJ,cAAC,EAAD,CACIjB,MAAOgB,EACPf,SAAUgB,EAFd,SAII,sBAAK7D,UAAWC,IAAEiE,KAAlB,UACI,oDACA,uBAAOC,KAAM,OACNC,MAAOZ,EACP1C,GAAI,aACJuD,YAAa,aACbC,SAzBU,SAAClB,GAC9BK,EAAaL,EAAEmB,OAAOH,UA0BV,uBAAOD,KAAM,OACNC,MAAOV,EACP5C,GAAI,YACJuD,YAAa,YACbC,SA5BS,SAAClB,GAC7BO,EAAYP,EAAEmB,OAAOH,UA6BT,8BACI,wBAAQjB,QAzCA,WACpBK,GAAaE,IACbI,EAAS5B,EAAQ,CAACsC,WAAYhB,EAAWiB,UAAWf,KACpDD,EAAa,IACbE,EAAY,MAqCsCe,UAAWlB,IAAcE,EAA/D,+B,kCC7CXiB,EAAkC,SAAC,GAAwB,IAAvB/C,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WACnD,OACI,qBAAK7B,UAAWC,IAAE2E,iBAAlB,SACI,2BAAU5E,UAAWC,IAAE2B,KAAvB,UACI,uCAAUA,EAAK4C,WAAf,IAA4B5C,EAAK6C,aACjC,qBAAKI,IAAKjD,EAAKW,OAAQuC,IAAI,WAC3B,wCAAWlD,EAAKU,SAEhB,wBAAQa,QAAS,kBAAMtB,EAAWD,EAAKd,KAAvC,0BCVHiE,EAAY,WACrB,IAAM3D,EAAQ4D,aAAY,SAACzD,GAAD,OAA6BA,EAAMH,MAAMA,SAC7D0C,EAAWC,cAEjBkB,qBAAU,WACNnB,EJ2BoB,uCAAM,WAAOA,GAAP,mBAAAoB,EAAA,+EAKhBxE,IALgB,gBAGtByE,EAHsB,EAGtBA,OACOC,EAJe,EAItBA,KAAOA,KAEI,MAAXD,EACArB,EAASxC,EAAS,CAACM,KAAMwD,KAEzB3D,QAAQC,IAAI,4LATU,gDAY1BD,QAAQC,IAAI,SAZc,yDAAN,yDI1BrB,CAACoC,IAEJ,IAAMjC,EAAa,SAACf,GAChBW,QAAQC,IAAI,kBAAmBZ,GAC/BgD,EJqCoB,SAAChD,GAAD,8CAAgB,WAAOgD,GAAP,SAAAoB,EAAA,+EAEbxE,EAAoBI,GAFP,OAGrB,MAHqB,OAE7BqE,QAEHrB,EAASjC,EAAW,CAACf,QAJW,gDAOpCW,QAAQC,IAAI,UAAW,CAAC2D,MAAK,OAPO,yDAAhB,sDIrCXC,CAAaxE,KAGpByE,EAAcC,uBAAY,WAC5B,OAAOpE,GAASA,EAAMqE,KAAI,SAAC7D,EAAME,GAC7B,OAAO,cAAC,EAAD,CACOF,KAAMA,EACNC,WAAYA,GAFPD,EAAKd,SAK7B,CAACM,IAEJ,OACI,qBAAKpB,UAAWC,IAAEyF,UAAlB,SACKH,OC1BAI,EAAmB,WAC5B,OACI,sBAAK3F,UAAWC,IAAE2F,KAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCUGC,MAZf,WACI,OACI,sBAAK7F,UAAU,MAAf,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8F,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,aCCnCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBtF,MAAK,YAAkD,IAA/CuF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,eCJRO,EAAcC,YAAgB,CAChCrF,MAAMoB,IAIGkE,EAAQC,YAAe,CAChClE,QAAS+D,EACTI,WAAY,SAAAC,GAAoB,OAAIA,IAAuBC,QAAQC,QAOvEC,OAAON,MAAQA,ECVfO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACI,cAAC,EAAD,UAIZU,SAASC,eAAe,SAM5BrB,M","file":"static/js/main.a6e67986.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3vY3Y\",\"content\":\"Modal_content__3jPuW\",\"active\":\"Modal_active__2gqy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"employees_list__1DD4w\",\"container\":\"employees_container__2lC9k\",\"empl\":\"employees_empl__BCCXg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__nh_al\",\"nav\":\"styles_nav__2izSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddUser_form__1QbCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesOverlay\":\"Users_employeesOverlay__16Gvz\",\"user\":\"Users_user__35QFA\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\nimport s from './styles.module.css'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink className={s.nav} to=\"/home\">Home</NavLink>\r\n            <NavLink className={s.nav} to=\"/employees\">Employees</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            Home\r\n        </div>\r\n    )\r\n}\r\n","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://reqres.in/api/'\r\n})\r\n\r\nexport const usersAPI = {\r\n    fetchUsers(): Promise<AxiosResponse<ResponseType<Array<UserType>>>> {\r\n        return instance.get<ResponseType<Array<UserType>>>(`users?per_page=12`)\r\n            .then(res => res)\r\n    },\r\n    deleteUser(id: number): Promise<AxiosResponse> {\r\n        return instance.delete(`users/${id}`)\r\n    }\r\n}\r\nexport type ResponseType<D = Array<Record<string, unknown>>> = {\r\n    page: number;\r\n    per_page: number;\r\n    total: number;\r\n    total_pages: number;\r\n    data: D;\r\n};\r\nexport type UserType = {\r\n    id: number,\r\n    email: string,\r\n    first_name: string,\r\n    last_name: string,\r\n    avatar: string,\r\n}\r\n","import {createSlice, PayloadAction, ThunkDispatch} from '@reduxjs/toolkit'\r\nimport {usersAPI, UserType} from \"../api/api\";\r\nimport {Dispatch} from \"react\";\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'users',\r\n    initialState: initialState,\r\n    reducers: {\r\n        setUsers: (state, action: PayloadAction<{ user: Array<UserType> }>) => {\r\n            console.log(state.users)\r\n            state.users = action.payload.user\r\n        },\r\n        removeUser: (state, action: PayloadAction<{ id: number }>) => {\r\n            const index = state.users.findIndex(tl => tl.id === action.payload.id);\r\n            if (index > -1) {\r\n                state.users.splice(index, 1);\r\n            }\r\n        },\r\n        addUser(state, action: PayloadAction<{ first_name: string, last_name: string }>) {\r\n            state.users = [{\r\n                id: Math.floor(Math.random() * 1000),\r\n                email: '',\r\n                avatar: '',\r\n                ...action.payload\r\n            }, ...state.users];\r\n        }\r\n    }\r\n})\r\n\r\nexport const usersReducer = slice.reducer\r\n\r\n\r\nexport const {setUsers, removeUser, addUser} = slice.actions\r\n\r\n\r\nexport const getUsersList = () => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        const {\r\n            status,\r\n            data: {data}\r\n        } = await usersAPI.fetchUsers()\r\n        if (status === 200) {\r\n            dispatch(setUsers({user: data}))\r\n        } else {\r\n            console.log('ошибка получения данных от сервера')\r\n        }\r\n    } catch (error) {\r\n        console.log('Error')\r\n    }\r\n}\r\nexport const removeUserTC = (id: number) => async (dispatch: Dispatch<any>) => {\r\n    try {\r\n        const {status} = await usersAPI.deleteUser(id);\r\n        if (status === 204) {\r\n            dispatch(removeUser({id}));\r\n        }\r\n    } catch (error) {\r\n        console.log('Error: ', {error});\r\n    }\r\n};\r\n","import React, {FC} from 'react';\r\nimport s from './Modal.module.css'\r\n\r\n\r\ninterface ModalType {\r\n    modal: boolean\r\n    setModal: (value: boolean) => void\r\n}\r\n\r\n\r\nconst Modal: FC<ModalType> = ({modal, setModal, children}) => {\r\n    const modalClassName = `${s.modal} ${modal ? s.active : \"\"}`;\r\n    const modalContentClassName = `${s.content} ${modal ? s.active : \"\"}`;\r\n    return (\r\n        <div className={modalClassName} onClick={ () => setModal(false)}>\r\n            <div className={modalContentClassName} onClick={e =>  e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {ChangeEvent, useState} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addUser} from \"../../../redux/usersReducer\";\r\nimport Modal from \"../../04-Modal/Modal\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport s from './AddUser.module.css'\r\n\r\nexport const AddUser = () => {\r\n    const [firstName, setFirstName] = useState<string>('');\r\n    const [lastName, setLastName] = useState<string>('');\r\n    const [open, setOpen] = useState(false)\r\n    const dispatch = useDispatch();\r\n\r\n    const addUserClickHandler = () => {\r\n        if (firstName && lastName) {\r\n            dispatch(addUser({first_name: firstName, last_name: lastName}));\r\n            setFirstName('')\r\n            setLastName('')\r\n        }\r\n    }\r\n    const onFirstNameChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setFirstName(e.target.value);\r\n    }\r\n    const onLastNameChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLastName(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.btn}>\r\n                <Button onClick={() => {\r\n                    setOpen(true)\r\n                }}>Add User\r\n                </Button>\r\n            </div>\r\n            <Modal\r\n                modal={open}\r\n                setModal={setOpen}\r\n            >\r\n                <div className={s.form}>\r\n                    <h2>Add a new employee</h2>\r\n                    <input type={'text'}\r\n                           value={firstName}\r\n                           id={'first-name'}\r\n                           placeholder={'First name'}\r\n                           onChange={onFirstNameChangeHandler}\r\n                    />\r\n                    <input type={'text'}\r\n                           value={lastName}\r\n                           id={'last-name'}\r\n                           placeholder={'Last name'}\r\n                           onChange={onLastNameChangeHandler}\r\n                    />\r\n                    <div>\r\n                        <button onClick={addUserClickHandler} disabled={!firstName || !lastName}>Accept</button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {UserType} from \"../../../api/api\";\r\nimport s from './Users.module.css'\r\n\r\ntype UsersTypeProps = {\r\n    user: UserType,\r\n    removeUser: (id: number) => void\r\n}\r\n\r\nexport const Users: React.FC<UsersTypeProps> = ({user, removeUser}) => {\r\n    return (\r\n        <div className={s.employeesOverlay}>\r\n            <fieldset className={s.user}>\r\n                <legend> {user.first_name} {user.last_name}</legend>\r\n                <img src={user.avatar} alt=\"Avatar\"/>\r\n                <p>email: {user.email}</p>\r\n\r\n                <button onClick={() => removeUser(user.id)}>delete</button>\r\n\r\n            </fieldset>\r\n        </div>\r\n    )\r\n}","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './employees.module.css'\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {getUsersList, removeUserTC} from \"../../redux/usersReducer\";\r\nimport {Users} from \"./User/Users\";\r\n\r\nexport const Employees = () => {\r\n    const users = useSelector((state: AppRootStateType) => state.users.users)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersList())\r\n    }, [dispatch])\r\n\r\n    const removeUser = (id: number) => {\r\n        console.log('remove user id:', id)\r\n        dispatch(removeUserTC(id))\r\n    }\r\n\r\n    const mappedUsers = useCallback(() => {\r\n        return users && users.map((user, index) => {\r\n            return <Users key={user.id}\r\n                          user={user}\r\n                          removeUser={removeUser}\r\n            />\r\n        })\r\n    }, [users])\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            {mappedUsers()}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {AddUser} from \"./AddUser/AddUser\";\r\nimport {Employees} from \"./Employees\";\r\nimport s from './employees.module.css'\r\n\r\nexport const EmployeesContainer=()=>{\r\n    return(\r\n        <div className={s.empl}>\r\n            <AddUser/>\r\n            <Employees/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/03-Header/Header\";\nimport {Route, Routes} from 'react-router-dom';\nimport {Home} from \"./components/01-Home/Home\";\nimport {EmployeesContainer} from \"./components/02-Employees/EmployeesContainer\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Routes>\n                <Route path=\"/home\" element={<Home/>}/>\n                <Route path=\"/employees\" element={<EmployeesContainer/>}/>\n            </Routes>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport {combineReducers} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {usersReducer} from \"./usersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    users:usersReducer\r\n})\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunkMiddleware)\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}